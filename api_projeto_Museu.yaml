openapi: 3.0.3
info:
  title: Projeto para Museu Nacional Soares dos Reis
  description: |-
    A API para a aplicação dedicada ao Museu Nacional Soares dos Reis
  version: 1.0.0
  contact:
    email: 12997@ismt.pt
servers:
  - url: http://localhost:5000/api/v1
    description: |-
      Servidor local
tags:
  - name: ranking_evento_estudantes
    description: Ranking dos estudantes no evento

  - name: ranking_global_escolas
    description: Ranking de escolas globalmente

  - name: ranking_global_estudantes
    description: Ranking global de estudantes

  - name: respostas
    description: Respostas das perguntas

  - name: tentativas
    description: Tentativas de cada estudante para uma pergunta

  - name: desafios
    description: Desafios propostos no final de cada visita

  - name: desafio-perguntas
    description: Conecta as perguntas ao desafio

  - name: estudantes
    description: O estudante

  - name: escolas
    description: As escolas

  - name: eventos
    description: Visitas de estudo que decorrem

  - name: perguntas
    description: A pergunta

  - name: pergunta-resposta
    description: Conecta a pergunta à resposta



paths:
  /ranking-evento-estudante:
    get:
      description: 'Obtêm a informação do ranking dos esntudante num evento '
      operationId: getRankingStudent
      tags:
        - ranking_evento_estudantes
      responses:
        '200':
          description: OK
        '400':
          description: Pedido inválido
        '500':
          description: Erro ao tentar obter o ranking dos estudantes
    post:
      description: 'Cria o ranking dos estudantes num evento'
      operationId: createRankingStudent
      tags:
        - ranking_evento_estudantes
      responses:
        '201':
          description: OK
        '400':
          description: Pedido inválido
        '422':
          description: Excessão de validação
  /ranking-evento-estudante/{id}:
    put:
      description: 'Faz update do ranking de um estudante'
      operationId: updateRankingStudent
      tags:
        - ranking_evento_estudantes
      parameters:
        - name: id
          in: path
          required: true
          description: id do ranking de estudantes no evento
          schema:
            type: integer
      responses:
        '200':
          description: OK
        '400':
          description: Pedido inválido
        '422':
          description: Excessão de validação
    delete:
      description: 'Remove o ranking de um estudante '
      operationId: deleteRankingStudent
      tags:
        - ranking_evento_estudantes
      parameters:
        - name: id
          in: path
          required: true
          description: id do ranking de estudantes no evento
          schema:
            type: integer
      responses:
        '400':
          description: Pedido inválido
        '404':
          description: Ranking de estudantes não encontrado
  /ranking-global-escola:
    get:
      description: 'Obtêm a informação do ranking das escolas'
      operationId: getSchoolRanking
      tags:
        - ranking_global_escolas
      responses:
        '200':
          description: OK
        '400':
          description: Pedido inválido
        '500':
          description: Erro ao tentar obter o ranking das escolas
    post:
      description: 'Cria o ranking das escolas'
      operationId: createSchoolRanking
      tags:
        - ranking_global_escolas
      responses:
        '201':
          description: OK
        '400':
          description: Pedido inválido
        '422':
          description: Excessão de validação
  /ranking-global-escola/{id}:
    put:
      description: 'Faz update do ranking das escolas'
      operationId: updateSchoolRanking
      tags:
        - ranking-global-escolas
      parameters:
        - name: id
          in: path
          required: true
          description: id do ranking das escolas
          schema:
            type: integer
      responses:
        '200':
          description: OK
        '400':
          description: Pedido inválido
        '422':
          description: Excessão de validação
    delete:
      description: 'Remove o ranking de uma escola '
      operationId: deleteSchoolRanking
      tags:
        - ranking_global_escolas
      parameters:
        - name: id
          in: path
          required: true
          description: id do ranking da escola
          schema:
            type: integer
      responses:
        '400':
          description: Pedido inválido
        '404':
          description: Ranking da escola não encontrado
  /ranking-global-estudante:
    get:
      description: 'Obtêm a informação do ranking global dos estudantes'
      operationId: getGlobalStudentRanking
      tags:
        - ranking_global_estudantes
      responses:
        '200':
          description: OK
        '400':
          description: Pedido inválido
        '500':
          description: Erro ao tentar obter o ranking dos alunos globais
    post:
      description: 'Cria o ranking global dos estudantes'
      operationId: createGlobalStudentRanking
      tags:
        - ranking_global_estudantes
      responses:
        '201':
          description: OK
        '400':
          description: Pedido inválido
        '422':
          description: Excessão de validação
  /ranking-global-estudante/{id}:
    put:
      description: 'Faz update do ranking global dos alunos'
      operationId: updateGlobalStudentRanking
      tags:
        - ranking-global-estudantes
      parameters:
        - name: id
          in: path
          required: true
          description: id do ranking global dos estudantes
          schema:
            type: integer
      responses:
        '200':
          description: OK
        '400':
          description: Pedido inválido
        '422':
          description: Excessão de validação
    delete:
      description: 'Remove o ranking global de um estudante'
      operationId: deleteGlobalStudentRanking
      tags:
        - ranking_global_estudantes
      parameters:
        - name: id
          in: path
          required: true
          description: id do ranking global do estudante
          schema:
            type: integer
      responses:
        '400':
          description: Pedido inválido
        '404':
          description: Ranking global do estudante não encontrado
  /resposta:
    post:
      description: 'Cria uma resposta'
      operationId: createAnswer
      tags:
        - respostas
      responses:
        '201':
          description: OK
        '400':
          description: Pedido inválido
        '422':
          description: Excessão de validação
  /resposta/{id}:
    get:
      description: 'Obtêm a informação de uma resposta'
      operationId: getAnswer
      tags:
        - respostas
      parameters:
        - name: id
          in: path
          required: true
          description: id da resposta
          schema:
            type: integer
      responses:
        '200':
          description: OK
        '400':
          description: Pedido inválido
        '500':
          description: Erro ao tentar obter a resposta
    put:
      description: 'Faz update da resposta via id'
      operationId: updateAnswer
      tags:
        - respostas
      parameters:
        - name: id
          in: path
          required: true
          description: id da resposta
          schema:
            type: integer
      responses:
        '200':
          description: OK
        '400':
          description: Pedido inválido
        '422':
          description: Excessão de validação
    delete:
      description: 'Remove a resposta'
      operationId: deleteAnswer
      tags:
        - respostas
      parameters:
        - name: id
          in: path
          required: true
          description: id da resposta
          schema:
            type: integer
      responses:
        '400':
          description: Pedido inválido
        '404':
          description: Resposta não encontrada
  /tentativa:
    get:
      description: 'Obtêm a informação das tentativas'
      operationId: getTry
      tags:
        - tentativas
      responses:
        '200':
          description: OK
        '400':
          description: Pedido inválido
        '500':
          description: Erro ao tentar obter as tentativas
    post:
      description: 'Cria uma tentativa'
      operationId: createTry
      tags:
        - tentativas
      responses:
        '201':
          description: OK
        '400':
          description: Pedido inválido
        '422':
          description: Excessão de validação
  /tentativa/{id}:
    put:
      description: 'Faz update de uma tentativa via id'
      operationId: updateTry
      tags:
        - tentativas
      parameters:
        - name: id
          in: path
          required: true
          description: id da tentativa
          schema:
            type: integer
      responses:
        '200':
          description: OK
        '400':
          description: Pedido inválido
        '422':
          description: Excessão de validação
    delete:
      description: 'Remove a tentativa'
      operationId: deleteTry
      tags:
        - tentativas
      parameters:
        - name: id
          in: path
          required: true
          description: id da tentativa
          schema:
            type: integer
      responses:
        '400':
          description: Pedido inválido
        '404':
          description: Tentativa não encontrada
    /desafios:
    get:
      summary: Listar todos os desafios
      tags:
        - Desafios
      responses:
        '200':
          description: Lista de desafios
    post:
      summary: Criar um novo desafio
      tags:
        - Desafios
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                nome:
                  type: string
                codigo:
                  type: string
                descricao:
                  type: string
      responses:
        '201':
          description: Desafio criado com sucesso
  /desafios:
    get:
      summary: Listar todos os desafios
      tags:
        - Desafios
      responses:
        '200':
          description: Lista de desafios
    post:
      summary: Criar um novo desafio
      tags:
        - Desafios
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                nome:
                  type: string
                codigo:
                  type: string
                descricao:
                  type: string
      responses:
        '201':
          description: Desafio criado com sucesso
  /desafios/{id}:
    get:
      summary: Obter um desafio específico
      tags:
        - Desafios
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Detalhes do desafio
    put:
      summary: Atualizar um desafio existente
      tags:
        - Desafios
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                nome:
                  type: string
                codigo:
                  type: string
                descricao:
                  type: string
      responses:
        '200':
          description: Desafio atualizado com sucesso
    delete:
      summary: Eliminar um desafio
      tags:
        - Desafios
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: Desafio eliminado com sucesso
    /desafios/{id_desafio}/perguntas:
    get:
      summary: Listar perguntas associadas a um desafio
      tags:
        - Desafio Perguntas
      parameters:
        - name: id_desafio
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Lista de perguntas do desafio
    post:
      summary: Associar uma pergunta a um desafio
      tags:
        - Desafio Perguntas
      parameters:
        - name: id_desafio
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                id_pergunta:
                  type: integer
      responses:
        '201':
          description: Associação criada com sucesso
  /desafios/{id_desafio}/perguntas:
      get:
        summary: Listar perguntas associadas a um desafio
        tags:
          - Desafio Perguntas
        parameters:
          - name: id_desafio
            in: path
            required: true
            schema:
              type: integer
        responses:
          '200':
            description: Lista de perguntas do desafio
      post:
        summary: Associar uma pergunta a um desafio
        tags:
          - Desafio Perguntas
        parameters:
          - name: id_desafio
            in: path
            required: true
            schema:
              type: integer
        requestBody:
          required: true
          content:
            application/json:
              schema:
                type: object
                properties:
                  id_pergunta:
                    type: integer
        responses:
          '201':
            description: Associação criada com sucesso
  /desafios/{id_desafio}/perguntas/{id_pergunta}:
    delete:
      summary: Remover associação entre pergunta e desafio
      tags:
        - Desafio Perguntas
      parameters:
        - name: id_desafio
          in: path
          required: true
          schema:
            type: integer
        - name: id_pergunta
          in: path
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: Associação removida com sucesso
  /escolas:
    get:
      summary: Listar todas as escolas
      tags:
        - Escolas
      responses:
        '200':
          description: Lista de escolas
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Escola'

    post:
      summary: Criar uma nova escola
      tags:
        - Escolas
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Escola'
      responses:
        '201':
          description: Escola criada com sucesso
  /escolas/{id}:
    get:
      summary: Obter uma escola específica
      tags:
        - Escolas
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Detalhes da escola
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Escola'

    put:
      summary: Atualizar uma escola
      tags:
        - Escolas
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Escola'
      responses:
        '200':
          description: Escola atualizada com sucesso

    delete:
      summary: Eliminar uma escola
      tags:
        - Escolas
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: Escola eliminada com sucesso
  /estudantes:
    get:
      summary: Listar todos os estudantes
      tags:
        - Estudantes
      responses:
        '200':
          description: Lista de estudantes
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Estudante'

    post:
      summary: Criar um novo estudante
      tags:
        - Estudantes
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Estudante'
      responses:
        '201':
          description: Estudante criado com sucesso
  /estudantes/{id}:
    get:
      summary: Obter um estudante específico
      tags:
        - Estudantes
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Detalhes do estudante
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Estudante'

    put:
      summary: Atualizar um estudante
      tags:
        - Estudantes
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Estudante'
      responses:
        '200':
          description: Estudante atualizado com sucesso

    delete:
      summary: Eliminar um estudante
      tags:
        - Estudantes
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: Estudante eliminado com sucesso
  /eventos:
    get:
      summary: Listar todos os eventos
      tags:
        - Eventos
      responses:
        '200':
          description: Lista de eventos
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Evento'

    post:
      summary: Criar um novo evento
      tags:
        - Eventos
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Evento'
      responses:
        '201':
          description: Evento criado com sucesso
  /eventos/{id}:
    get:
      summary: Obter um evento específico
      tags:
        - Eventos
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Detalhes do evento
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Evento'

    put:
      summary: Atualizar um evento
      tags:
        - Eventos
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Evento'
      responses:
        '200':
          description: Evento atualizado com sucesso

    delete:
      summary: Eliminar um evento
      tags:
        - Eventos
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: Evento eliminado com sucesso
  /perguntas:
    get:
      summary: Listar todas as perguntas
      tags:
        - Perguntas
      responses:
        '200':
          description: Lista de perguntas
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Pergunta'

    post:
      summary: Criar uma nova pergunta
      tags:
        - Perguntas
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Pergunta'
      responses:
        '201':
          description: Pergunta criada com sucesso
  /perguntas/{id}:
    get:
      summary: Obter uma pergunta específica
      tags:
        - Perguntas
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Detalhes da pergunta
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Pergunta'

    put:
      summary: Atualizar uma pergunta
      tags:
        - Perguntas
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Pergunta'
      responses:
        '200':
          description: Pergunta atualizada com sucesso

    delete:
      summary: Eliminar uma pergunta
      tags:
        - Perguntas
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: Pergunta eliminada com sucesso
  /perguntas/{id_pergunta}/respostas:
    get:
      summary: Listar respostas de uma pergunta
      tags:
        - Pergunta Respostas
      parameters:
        - name: id_pergunta
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Lista de respostas
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PerguntaResposta'

    post:
      summary: Criar uma nova resposta para a pergunta
      tags:
        - Pergunta Respostas
      parameters:
        - name: id_pergunta
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                texto:
                  type: string
                correta:
                  type: boolean
      responses:
        '201':
          description: Resposta criada com sucesso
  /respostas/{id}:
    get:
      summary: Obter detalhes de uma resposta
      tags:
        - Pergunta Respostas
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Detalhes da resposta
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PerguntaResposta'

    put:
      summary: Atualizar uma resposta
      tags:
        - Pergunta Respostas
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PerguntaResposta'
      responses:
        '200':
          description: Resposta atualizada com sucesso

    delete:
      summary: Eliminar uma resposta
      tags:
        - Pergunta Respostas
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: Resposta eliminada com sucesso

components:
  schemas:
    Ranking_evento_estudantes:
      type: object
      properties:
        id:
          type: integer
        id_estudante:
          type: integer
        id_evento:
          type: integer
        pontos:
          type: integer

    Ranking_global_escolas:
      type: object
      properties:
        id:
          type: integer
        id_escola:
          type: integer
        pontos:
          type: integer

    Ranking_global_estudantes:
      type: object
      properties:
        id:
          type: integer
        id_estudante:
          type: integer
        id_evento:
          type: integer
        pontos:
          type: integer
    
    Respostas:
      type: object
      properties:
        id:
          type: integer
        texto:
          type: string

    Tentativas:
      type: object
      properties:
        id:
          type: integer
        id_estudante:
          type: integer
        id_pergunta:
          type: integer
        id_resposta:
          type: integer
        id_evento:
          type: integer
        correta:
          type: integer
        attemptedAt:
          type: string

    Desafio:
      type: object
      properties:
        id:
          type: integer
        nome:
          type: string
        codigo:
          type: string
        descricao:
          type: string
        createdAt:
          type: string
        updatedAt:
          type: string

    DesafioPergunta:
      type: object
      properties:
        id:
          type: integer
          example: 1
        id_desafio:
          type: integer
          example: 5
        id_pergunta:
          type: integer
          example: 12
        createdAt:
          type: string
          format: date-time
          example: "2025-05-16T10:00:00Z"
        updatedAt:
          type: string
          format: date-time
          example: "2025-05-16T10:05:00Z"
      required:
        - id_desafio
        - id_pergunta

    Escola:
      type: object
      properties:
        id:
          type: integer
          example: 1
        nome:
          type: string
          example: "Escola Secundária de Lisboa"
        codigo:
          type: string
          example: "ESC123"
        createdAt:
          type: string
          format: date-time
          example: "2025-05-01T08:30:00Z"
        updatedAt:
          type: string
          format: date-time
          example: "2025-05-10T14:45:00Z"
      required:
        - nome
        - codigo

    Estudante:
      type: object
      properties:
        id:
          type: integer
          example: 1
        nome:
          type: string
          example: "Joana Silva"
        numero_estudante:
          type: string
          example: "A12345"
        id_escola:
          type: integer
          example: 3
        createdAt:
          type: string
          format: date-time
          example: "2025-04-20T09:15:00Z"
        updatedAt:
          type: string
          format: date-time
          example: "2025-05-10T12:00:00Z"
      required:
        - nome
        - numero_estudante
        - id_escola

    Evento:
      type: object
      properties:
        id:
          type: integer
          example: 1
        titulo:
          type: string
          example: "Visita ao Museu Nacional"
        descricao:
          type: string
          example: "Visita guiada com atividade interativa sobre arte moderna."
        data:
          type: string
          format: date
          example: "2025-06-15"
        local:
          type: string
          example: "Museu Nacional de Arte Contemporânea"
        createdAt:
          type: string
          format: date-time
          example: "2025-05-10T10:00:00Z"
        updatedAt:
          type: string
          format: date-time
          example: "2025-05-12T12:30:00Z"
      required:
        - titulo
        - data
        - local

    Pergunta:
      type: object
      properties:
        id:
          type: integer
          example: 1
        texto:
          type: string
          example: "Qual foi o movimento artístico dominante no século XIX?"
        tipo:
          type: string
          enum: [escolha_multipla, verdadeiro_falso, resposta_livre]
          example: "escolha_multipla"
        createdAt:
          type: string
          format: date-time
          example: "2025-05-01T08:00:00Z"
        updatedAt:
          type: string
          format: date-time
          example: "2025-05-02T09:30:00Z"
      required:
        - texto
        - tipo

    PerguntaResposta:
      type: object
      properties:
        id:
          type: integer
          example: 1
        id_pergunta:
          type: integer
          example: 3
        texto:
          type: string
          example: "Impressionismo"
        correta:
          type: boolean
          example: true
        createdAt:
          type: string
          format: date-time
          example: "2025-05-10T14:00:00Z"
        updatedAt:
          type: string
          format: date-time
          example: "2025-05-12T10:45:00Z"
      required:
        - id_pergunta
        - texto
        - correta